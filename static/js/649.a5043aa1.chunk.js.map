{"version":3,"file":"static/js/649.a5043aa1.chunk.js","mappings":"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","sources":["components/input/DsCheckbox.tsx","pages/CheckboxPage.tsx","../node_modules/@mui/material/esm/FormGroup/formGroupClasses.js","../node_modules/@mui/material/esm/FormGroup/FormGroup.js","../node_modules/@mui/material/esm/FormControl/formControlState.js","../node_modules/@mui/material/esm/FormControl/useFormControl.js","../node_modules/@mui/material/esm/FormControl/FormControlContext.js","../node_modules/@mui/material/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/esm/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/esm/Checkbox/checkboxClasses.js","../node_modules/@mui/material/esm/Checkbox/Checkbox.js"],"sourcesContent":["import { Checkbox, FormControlLabel, CheckboxProps as MuiCheckboxProps } from '@mui/material';\r\nimport * as React from 'react'; // React 임포트 추가\r\n\r\n// 1. Props 인터페이스 이름 변경 및 확장\r\nexport interface DsCheckboxProps {\r\n    label?: string; // 체크박스 옆에 표시될 라벨\r\n    checked?: boolean;\r\n    // 2. onChange 핸들러 시그니처를 MUI Checkbox와 일치시킵니다.\r\n    onChange?: (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void;\r\n    disabled?: boolean; // 체크박스 및 라벨 비활성화 여부\r\n    id?: string; // 체크박스 DOM ID (접근성 및 테스트에 유용)\r\n    name?: string; // 폼 제출 시 사용될 체크박스 이름\r\n    // MUI Checkbox의 다른 유용한 props 추가\r\n    color?: MuiCheckboxProps['color']; // 'primary', 'secondary', 'default', 등\r\n    size?: MuiCheckboxProps['size'];   // 'small', 'medium'\r\n    // FormControlLabel 관련 props도 필요에 따라 추가 가능\r\n    // 예: labelPlacement?: 'end' | 'start' | 'top' | 'bottom';\r\n}\r\n\r\n// 1. 컴포넌트 이름 변경\r\nexport default function DsCheckbox({\r\n                                       label, // 4. 기본 라벨 'Check me' 제거 (사용하는 쪽에서 명시적으로 제공)\r\n                                       checked,\r\n                                       onChange,\r\n                                       disabled,\r\n                                       id,\r\n                                       name,\r\n                                       color,\r\n                                       size,\r\n                                   }: DsCheckboxProps) {\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Checkbox\r\n                    checked={checked}\r\n                    onChange={onChange}\r\n                    disabled={disabled}\r\n                    id={id}\r\n                    name={name}\r\n                    color={color}\r\n                    size={size}\r\n                    // 여기에 MuiCheckboxProps에서 가져오고 싶은 다른 props를 전달할 수 있습니다.\r\n                    // 예: inputProps={{ 'aria-label': label || 'checkbox' }}\r\n                />\r\n            }\r\n            label={label}\r\n            // FormControlLabel에도 disabled를 전달하여 라벨의 스타일과 동작을 일관되게 합니다.\r\n            disabled={disabled}\r\n        />\r\n    );\r\n}","// src/pages/CheckboxPage.tsx\r\nimport * as React from 'react';\r\nimport DsCheckbox from '../components/input/DsCheckbox'; // DsCheckbox 컴포넌트 경로\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\n// Indeterminate Checkbox 예제를 위해 추가된 import\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n// FormGroup 예제를 위해 추가된 import\r\nimport FormGroup from '@mui/material/FormGroup';\r\n\r\nexport default function CheckboxPage() {\r\n    // --- 기본 예제 상태 ---\r\n    const [isChecked1, setIsChecked1] = React.useState<boolean>(false);\r\n    const [isChecked2, setIsChecked2] = React.useState<boolean>(true);\r\n\r\n    // --- Indeterminate Checkbox 예제 상태 ---\r\n    const [indeterminateChecked, setIndeterminateChecked] = React.useState([true, false]);\r\n\r\n    // --- FormGroup 예제 상태 분리 ---\r\n    // 가로 FormGroup을 위한 상태\r\n    const [horizontalState, setHorizontalState] = React.useState({\r\n        gilad: true,\r\n        jason: false,\r\n        antoine: false,\r\n    });\r\n    // 세로 FormGroup을 위한 상태\r\n    const [verticalState, setVerticalState] = React.useState({\r\n        gilad: true,\r\n        jason: false,\r\n        antoine: false,\r\n    });\r\n\r\n\r\n    // --- 핸들러 함수들 ---\r\n    const handleChange1 = (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => {\r\n        setIsChecked1(checked);\r\n    };\r\n\r\n    const handleParentChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setIndeterminateChecked([event.target.checked, event.target.checked]);\r\n    };\r\n\r\n    const handleChild1Change = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setIndeterminateChecked([event.target.checked, indeterminateChecked[1]]);\r\n    };\r\n\r\n    const handleChild2Change = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setIndeterminateChecked([indeterminateChecked[0], event.target.checked]);\r\n    };\r\n\r\n    // 가로 FormGroup을 위한 핸들러\r\n    const handleHorizontalChange = (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => {\r\n        setHorizontalState({\r\n            ...horizontalState,\r\n            [event.target.name]: checked,\r\n        });\r\n    };\r\n\r\n    // 세로 FormGroup을 위한 핸들러\r\n    const handleVerticalChange = (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => {\r\n        setVerticalState({\r\n            ...verticalState,\r\n            [event.target.name]: checked,\r\n        });\r\n    };\r\n\r\n\r\n    // --- 렌더링을 위한 JSX 변수 ---\r\n    const indeterminateChildren = (\r\n        <Box sx={{ display: 'flex', flexDirection: 'column', ml: 3 }}>\r\n            <FormControlLabel\r\n                label=\"Child 1\"\r\n                control={<Checkbox checked={indeterminateChecked[0]} onChange={handleChild1Change} />}\r\n            />\r\n            <FormControlLabel\r\n                label=\"Child 2\"\r\n                control={<Checkbox checked={indeterminateChecked[1]} onChange={handleChild2Change} />}\r\n            />\r\n        </Box>\r\n    );\r\n\r\n    return (\r\n        <Box sx={{ padding: 3 }}>\r\n            <Typography variant=\"h1\" component=\"h1\" gutterBottom>\r\n                Checkbox\r\n            </Typography>\r\n\r\n            {/* --- 기본 예제 --- */}\r\n            <Typography variant=\"h6\" gutterBottom sx={{ mt: 2 }}>\r\n                Basic Checkbox\r\n            </Typography>\r\n            <DsCheckbox\r\n                label=\"동의합니다 (Option 1)\"\r\n                checked={isChecked1}\r\n                onChange={handleChange1}\r\n                id=\"checkbox-option-1\"\r\n                name=\"agreement\"\r\n            />\r\n\r\n            {/* --- 비활성화 예제 --- */}\r\n            <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\r\n                Disabled Checkbox\r\n            </Typography>\r\n            <DsCheckbox\r\n                label=\"이메일 수신 동의 (Option 2 - Disabled)\"\r\n                checked={isChecked2}\r\n                onChange={(e, checked) => setIsChecked2(checked)}\r\n                disabled={true}\r\n                id=\"checkbox-option-2\"\r\n            />\r\n\r\n            {/* --- 라벨 없는 예제 --- */}\r\n            <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\r\n                Checkbox without Label\r\n            </Typography>\r\n            <DsCheckbox\r\n                checked={false}\r\n                onChange={(e, checked) => console.log('No label state:', checked)}\r\n                id=\"checkbox-option-3\"\r\n                aria-label=\"Standalone checkbox\"\r\n            />\r\n\r\n            {/* --- 작은 크기 예제 --- */}\r\n            <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\r\n                Small Size Checkbox\r\n            </Typography>\r\n            <DsCheckbox\r\n                label=\"작은 크기 (Small Size)\"\r\n                checked={true}\r\n                onChange={(e, checked) => console.log('Small size state:', checked)}\r\n                id=\"checkbox-option-4\"\r\n                size=\"small\"\r\n            />\r\n\r\n            {/* --- Indeterminate 예제 --- */}\r\n            <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\r\n                Indeterminate Checkbox\r\n            </Typography>\r\n            <div>\r\n                <FormControlLabel\r\n                    label=\"Parent\"\r\n                    control={\r\n                        <Checkbox\r\n                            checked={indeterminateChecked[0] && indeterminateChecked[1]}\r\n                            indeterminate={indeterminateChecked[0] !== indeterminateChecked[1]}\r\n                            onChange={handleParentChange}\r\n                        />\r\n                    }\r\n                />\r\n                {indeterminateChildren}\r\n            </div>\r\n\r\n            {/* --- 가로 FormGroup 예제 --- */}\r\n            <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\r\n                Horizontal FormGroup\r\n            </Typography>\r\n            <FormGroup row>\r\n                <DsCheckbox\r\n                    label=\"Gilad\"\r\n                    checked={horizontalState.gilad}\r\n                    onChange={handleHorizontalChange}\r\n                    name=\"gilad\"\r\n                />\r\n                <DsCheckbox\r\n                    label=\"Jason\"\r\n                    checked={horizontalState.jason}\r\n                    onChange={handleHorizontalChange}\r\n                    name=\"jason\"\r\n                />\r\n                <DsCheckbox\r\n                    label=\"Antoine\"\r\n                    checked={horizontalState.antoine}\r\n                    onChange={handleHorizontalChange}\r\n                    name=\"antoine\"\r\n                />\r\n            </FormGroup>\r\n\r\n            {/* --- 세로 FormGroup 예제 --- */}\r\n            <Typography variant=\"h6\" gutterBottom sx={{ mt: 4 }}>\r\n                Vertical FormGroup\r\n            </Typography>\r\n            <FormGroup>\r\n                <DsCheckbox\r\n                    label=\"Gilad\"\r\n                    checked={verticalState.gilad}\r\n                    onChange={handleVerticalChange}\r\n                    name=\"gilad\"\r\n                />\r\n                <DsCheckbox\r\n                    label=\"Jason\"\r\n                    checked={verticalState.jason}\r\n                    onChange={handleVerticalChange}\r\n                    name=\"jason\"\r\n                />\r\n                <DsCheckbox\r\n                    label=\"Antoine\"\r\n                    checked={verticalState.antoine}\r\n                    onChange={handleVerticalChange}\r\n                    name=\"antoine\"\r\n                />\r\n            </FormGroup>\r\n        </Box>\r\n    );\r\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getFormGroupUtilityClass } from \"./formGroupClasses.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport formControlState from \"../FormControl/formControlState.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap',\n  variants: [{\n    props: {\n      row: true\n    },\n    style: {\n      flexDirection: 'row'\n    }\n  }]\n});\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n    className,\n    row = false,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = {\n    ...props,\n    row,\n    error: fcs.error\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","export default function formControlState({\n  props,\n  states,\n  muiFormControl\n}) {\n  return states.reduce((acc, state) => {\n    acc[state] = props[state];\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n    return acc;\n  }, {});\n}","'use client';\n\nimport * as React from 'react';\nimport FormControlContext from \"./FormControlContext.js\";\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","'use client';\n\nimport * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst FormControlContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\nexport default FormControlContext;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from \"../internal/SwitchBase.js\";\nimport CheckBoxOutlineBlankIcon from \"../internal/svg-icons/CheckBoxOutlineBlank.js\";\nimport CheckBoxIcon from \"../internal/svg-icons/CheckBox.js\";\nimport IndeterminateCheckBoxIcon from \"../internal/svg-icons/IndeterminateCheckBox.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport checkboxClasses, { getCheckboxUtilityClass } from \"./checkboxClasses.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { mergeSlotProps } from \"../utils/index.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return {\n    ...classes,\n    // forward the disabled and checked classes to the SwitchBase\n    ...composedClasses\n  };\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  variants: [{\n    props: {\n      color: 'default',\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity)\n      }\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n      }\n    }\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n        color: (theme.vars || theme).palette[color].main\n      },\n      [`&.${checkboxClasses.disabled}`]: {\n        color: (theme.vars || theme).palette.action.disabled\n      }\n    }\n  })), {\n    // Should be last to override other colors\n    props: {\n      disableRipple: false\n    },\n    style: {\n      // Reset on touch devices, it doesn't add specificity\n      '&:hover': {\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }]\n})));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium',\n    disableRipple = false,\n    className,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = {\n    ...props,\n    disableRipple,\n    color,\n    indeterminate,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalInputProps = slotProps.input ?? inputProps;\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    elementType: CheckboxRoot,\n    className: clsx(classes.root, className),\n    shouldForwardComponentProp: true,\n    externalForwardedProps: {\n      slots,\n      slotProps,\n      ...other\n    },\n    ownerState,\n    additionalProps: {\n      type: 'checkbox',\n      icon: /*#__PURE__*/React.cloneElement(icon, {\n        fontSize: icon.props.fontSize ?? size\n      }),\n      checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n        fontSize: indeterminateIcon.props.fontSize ?? size\n      }),\n      disableRipple,\n      slots,\n      slotProps: {\n        input: mergeSlotProps(typeof externalInputProps === 'function' ? externalInputProps(ownerState) : externalInputProps, {\n          'data-indeterminate': indeterminate\n        })\n      }\n    }\n  });\n  return /*#__PURE__*/_jsx(RootSlot, {\n    ...rootSlotProps,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/input#attributes) applied to the `input` element.\n   * @deprecated Use `slotProps.input` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;"],"names":["DsCheckbox","_ref","label","checked","onChange","disabled","id","name","color","size","_jsx","FormControlLabel","control","Checkbox","CheckboxPage","isChecked1","setIsChecked1","React","isChecked2","setIsChecked2","indeterminateChecked","setIndeterminateChecked","horizontalState","setHorizontalState","gilad","jason","antoine","verticalState","setVerticalState","handleHorizontalChange","event","_objectSpread","target","handleVerticalChange","indeterminateChildren","_jsxs","Box","sx","display","flexDirection","ml","children","padding","Typography","variant","component","gutterBottom","mt","handleChange1","e","console","log","indeterminate","FormGroup","row","getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormGroupRoot","styled","overridesResolver","props","styles","ownerState","root","flexWrap","variants","style","inProps","ref","useDefaultProps","className","other","_objectWithoutProperties","muiFormControl","useFormControl","fcs","formControlState","states","error","classes","slots","composeClasses","useUtilityClasses","clsx","reduce","acc","state","FormControlContext","undefined","createSvgIcon","d","getCheckboxUtilityClass","CheckboxRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","concat","capitalize","memoTheme","theme","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","hoverOpacity","alpha","active","Object","entries","filter","createSimplePaletteValueFilter","map","_ref2","mainChannel","main","_ref3","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","_slotProps$input","_icon$props$fontSize","_indeterminateIcon$pr","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","slotProps","composedClasses","externalInputProps","input","RootSlot","rootSlotProps","useSlot","elementType","shouldForwardComponentProp","externalForwardedProps","additionalProps","type","fontSize","mergeSlotProps"],"sourceRoot":""}