{"version":3,"file":"static/js/842.9f49711f.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/internal/switchBaseClasses.js","../node_modules/@mui/material/esm/internal/SwitchBase.js","../node_modules/@mui/material/esm/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/esm/FormControlLabel/FormControlLabel.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport { getSwitchBaseUtilityClass } from \"./switchBaseClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)({\n  padding: 9,\n  borderRadius: '50%',\n  variants: [{\n    props: {\n      edge: 'start',\n      size: 'small'\n    },\n    style: {\n      marginLeft: -3\n    }\n  }, {\n    props: ({\n      edge,\n      ownerState\n    }) => edge === 'start' && ownerState.size !== 'small',\n    style: {\n      marginLeft: -12\n    }\n  }, {\n    props: {\n      edge: 'end',\n      size: 'small'\n    },\n    style: {\n      marginRight: -3\n    }\n  }, {\n    props: ({\n      edge,\n      ownerState\n    }) => edge === 'end' && ownerState.size !== 'small',\n    style: {\n      marginRight: -12\n    }\n  }]\n});\nconst SwitchBaseInput = styled('input', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required = false,\n    tabIndex,\n    type,\n    value,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = {\n    ...props,\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      input: inputProps,\n      ...slotProps\n    }\n  };\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    elementType: SwitchBaseRoot,\n    className: classes.root,\n    shouldForwardComponentProp: true,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      component: 'span',\n      ...other\n    },\n    getSlotProps: handlers => ({\n      ...handlers,\n      onFocus: event => {\n        handlers.onFocus?.(event);\n        handleFocus(event);\n      },\n      onBlur: event => {\n        handlers.onBlur?.(event);\n        handleBlur(event);\n      }\n    }),\n    ownerState,\n    additionalProps: {\n      centerRipple: true,\n      focusRipple: !disableFocusRipple,\n      disabled,\n      role: undefined,\n      tabIndex: null\n    }\n  });\n  const [InputSlot, inputSlotProps] = useSlot('input', {\n    ref: inputRef,\n    elementType: SwitchBaseInput,\n    className: classes.input,\n    externalForwardedProps,\n    getSlotProps: handlers => ({\n      ...handlers,\n      onChange: event => {\n        handlers.onChange?.(event);\n        handleInputChange(event);\n      }\n    }),\n    ownerState,\n    additionalProps: {\n      autoFocus,\n      checked: checkedProp,\n      defaultChecked,\n      disabled,\n      id: hasLabelFor ? id : undefined,\n      name,\n      readOnly,\n      required,\n      tabIndex,\n      type,\n      ...(type === 'checkbox' && value === undefined ? {} : {\n        value\n      })\n    }\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootSlotProps,\n    children: [/*#__PURE__*/_jsx(InputSlot, {\n      ...inputSlotProps\n    }), checked ? checkedIcon : icon]\n  });\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/input#attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    input: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    input: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error', 'required', 'asterisk']);\nexport default formControlLabelClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useFormControl } from \"../FormControl/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from \"./formControlLabelClasses.js\";\nimport formControlState from \"../FormControl/formControlState.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  },\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  },\n  variants: [{\n    props: {\n      labelPlacement: 'start'\n    },\n    style: {\n      flexDirection: 'row-reverse',\n      marginRight: -11\n    }\n  }, {\n    props: {\n      labelPlacement: 'top'\n    },\n    style: {\n      flexDirection: 'column-reverse'\n    }\n  }, {\n    props: {\n      labelPlacement: 'bottom'\n    },\n    style: {\n      flexDirection: 'column'\n    }\n  }, {\n    props: ({\n      labelPlacement\n    }) => labelPlacement === 'start' || labelPlacement === 'top' || labelPlacement === 'bottom',\n    style: {\n      marginLeft: 16 // used for row presentation of radio/checkbox\n    }\n  }]\n})));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk'\n})(memoTheme(({\n  theme\n}) => ({\n  [`&.${formControlLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n})));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n    checked,\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    inputRef,\n    label: labelProp,\n    labelPlacement = 'end',\n    name,\n    onChange,\n    required: requiredProp,\n    slots = {},\n    slotProps = {},\n    value,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const disabled = disabledProp ?? control.props.disabled ?? muiFormControl?.disabled;\n  const required = requiredProp ?? control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = {\n    ...props,\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [TypographySlot, typographySlotProps] = useSlot('typography', {\n    elementType: Typography,\n    externalForwardedProps,\n    ownerState\n  });\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(TypographySlot, {\n      component: \"span\",\n      ...typographySlotProps,\n      className: clsx(classes.label, typographySlotProps?.className),\n      children: label\n    });\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), required ? /*#__PURE__*/_jsxs(\"div\", {\n      children: [label, /*#__PURE__*/_jsxs(AsteriskComponent, {\n        ownerState: ownerState,\n        \"aria-hidden\": true,\n        className: classes.asterisk,\n        children: [\"\\u2009\", '*']\n      })]\n    }) : label]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    typography: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;"],"names":["getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","padding","borderRadius","variants","props","edge","size","style","marginLeft","_ref","ownerState","marginRight","_ref2","SwitchBaseInput","shouldForwardProp","rootShouldForwardProp","cursor","position","opacity","width","height","top","left","margin","zIndex","React","ref","autoFocus","checked","checkedProp","checkedIcon","defaultChecked","disabled","disabledProp","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","value","slots","slotProps","other","_objectWithoutProperties","setCheckedState","useControlled","controlled","default","Boolean","state","muiFormControl","useFormControl","hasLabelFor","_objectSpread","classes","root","concat","capitalize","input","composeClasses","useUtilityClasses","externalForwardedProps","RootSlot","rootSlotProps","useSlot","elementType","className","shouldForwardComponentProp","component","getSlotProps","handlers","event","_handlers$onFocus","call","handleFocus","_handlers$onBlur","handleBlur","additionalProps","centerRipple","focusRipple","role","undefined","InputSlot","inputSlotProps","_handlers$onChange","nativeEvent","defaultPrevented","newChecked","target","handleInputChange","_jsxs","children","_jsx","getFormControlLabelUtilityClasses","FormControlLabelRoot","overridesResolver","styles","formControlLabelClasses","label","labelPlacement","memoTheme","theme","display","alignItems","verticalAlign","WebkitTapHighlightColor","color","vars","palette","text","flexDirection","AsteriskComponent","_ref3","error","main","inProps","_ref4","useDefaultProps","componentsProps","control","disableTypography","labelProp","requiredProp","controlProps","forEach","key","fcs","formControlState","states","asterisk","TypographySlot","typographySlotProps","Typography","clsx"],"sourceRoot":""}