{"version":3,"file":"static/js/9.3d5c60cf.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/AlertTitle/alertTitleClasses.js","../node_modules/@mui/material/esm/AlertTitle/AlertTitle.js","components/feedback/DsAlert.tsx","pages/AlertPage.tsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAlertTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiAlertTitle', slot);\n}\nconst alertTitleClasses = generateUtilityClasses('MuiAlertTitle', ['root']);\nexport default alertTitleClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport { getAlertTitleUtilityClass } from \"./alertTitleClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAlertTitleUtilityClass, classes);\n};\nconst AlertTitleRoot = styled(Typography, {\n  name: 'MuiAlertTitle',\n  slot: 'Root'\n})(memoTheme(({\n  theme\n}) => {\n  return {\n    fontWeight: theme.typography.fontWeightMedium,\n    marginTop: -2\n  };\n}));\nconst AlertTitle = /*#__PURE__*/React.forwardRef(function AlertTitle(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAlertTitle'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AlertTitleRoot, {\n    gutterBottom: true,\n    component: \"div\",\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AlertTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AlertTitle;","import React from 'react';\r\nimport {\r\n    Alert,\r\n    AlertTitle,\r\n    AlertProps as MuiAlertProps,\r\n} from '@mui/material';\r\n\r\n// DsAlert 컴포넌트가 받을 props 타입을 정의합니다.\r\n// MUI의 AlertProps를 확장하여 모든 기본 기능을 지원하고, title을 추가합니다.\r\ninterface DsAlertProps extends MuiAlertProps {\r\n    /**\r\n     * Alert 메시지 위에 표시될 제목입니다.\r\n     */\r\n    title?: string;\r\n}\r\n\r\n/**\r\n * title prop을 통해 간단하게 제목 추가 가능.\r\n * severity, variant, onClose, action 등 MUI Alert의 모든 기능 지원\r\n */\r\nconst DsAlert: React.FC<DsAlertProps> = ({ title, children, ...props }) => {\r\n    return (\r\n        <Alert {...props}>\r\n            {/* title prop이 존재할 경우에만 AlertTitle을 렌더링합니다. */}\r\n            {title && <AlertTitle>{title}</AlertTitle>}\r\n            {children}\r\n        </Alert>\r\n    );\r\n};\r\n\r\nexport default DsAlert;","import React, { useState } from 'react';\r\nimport { Box, Typography, Button, Collapse } from '@mui/material';\r\nimport DsAlert from '../components/feedback/DsAlert';\r\n\r\nconst AlertPage = () => {\r\n    // 닫기 기능이 있는 Alert의 표시 상태를 관리합니다.\r\n    const [isClosableAlertVisible, setIsClosableAlertVisible] = useState(true);\r\n\r\n    return (\r\n        <Box sx={{ p: 3, display: 'flex', flexDirection: 'column', gap: 4 }}>\r\n            <Box>\r\n                <Typography variant=\"h1\" gutterBottom>\r\n                    Alert\r\n                </Typography>\r\n                <Typography color=\"text.secondary\">\r\n                    Alert는 사용자의 작업을 방해하지 않으면서 짧고 중요한 메시지를 표시합니다.\r\n                </Typography>\r\n            </Box>\r\n\r\n            {/* --- 예제 1: 기본 Alert (Outlined) --- */}\r\n            <Box>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    Basic Alerts (Outlined)\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n                    <DsAlert severity=\"error\" title=\"Error\">\r\n                        이것은 에러 알림입니다 — <strong>확인해보세요!</strong>\r\n                    </DsAlert>\r\n                    <DsAlert severity=\"warning\" title=\"Warning\">\r\n                        이것은 경고 알림입니다 — <strong>확인해보세요!</strong>\r\n                    </DsAlert>\r\n                    <DsAlert severity=\"info\" title=\"Info\">\r\n                        이것은 정보 알림입니다 — <strong>확인해보세요!</strong>\r\n                    </DsAlert>\r\n                    <DsAlert severity=\"success\" title=\"Success\">\r\n                        이것은 성공 알림입니다 — <strong>확인해보세요!</strong>\r\n                    </DsAlert>\r\n                </Box>\r\n            </Box>\r\n\r\n            {/* --- 예제 2: 채워진 Alert (Filled) --- */}\r\n            <Box>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    Filled Alerts\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n                    <DsAlert variant=\"filled\" severity=\"error\" title=\"Error\">\r\n                        이것은 에러 알림입니다 — <strong>확인해보세요!</strong>\r\n                    </DsAlert>\r\n                    <DsAlert variant=\"filled\" severity=\"warning\" title=\"Warning\">\r\n                        이것은 경고 알림입니다 — <strong>확인해보세요!</strong>\r\n                    </DsAlert>\r\n                    <DsAlert variant=\"filled\" severity=\"info\" title=\"Info\">\r\n                        이것은 정보 알림입니다 — <strong>확인해보세요!</strong>\r\n                    </DsAlert>\r\n                    <DsAlert variant=\"filled\" severity=\"success\" title=\"Success\">\r\n                        이것은 성공 알림입니다 — <strong>확인해보세요!</strong>\r\n                    </DsAlert>\r\n                </Box>\r\n            </Box>\r\n\r\n            {/* --- 예제 3: 액션이 포함된 Alert --- */}\r\n            <Box>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    Alerts with Actions\r\n                </Typography>\r\n                <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\r\n                    {/* 닫기 버튼이 있는 Alert */}\r\n                    <Collapse in={isClosableAlertVisible}>\r\n                        <DsAlert\r\n                            severity=\"info\"\r\n                            onClose={() => setIsClosableAlertVisible(false)}\r\n                        >\r\n                            이 알림은 닫을 수 있습니다.\r\n                        </DsAlert>\r\n                    </Collapse>\r\n                    {/* 커스텀 액션 버튼이 있는 Alert */}\r\n                    <DsAlert\r\n                        severity=\"success\"\r\n                        action={\r\n                            <Button color=\"inherit\" size=\"small\" variant=\"outlined\">\r\n                                UNDO\r\n                            </Button>\r\n                        }\r\n                    >\r\n                        프로필이 성공적으로 업데이트되었습니다!\r\n                    </DsAlert>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default AlertPage;"],"names":["getAlertTitleUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","AlertTitleRoot","styled","Typography","name","memoTheme","_ref","theme","fontWeight","typography","fontWeightMedium","marginTop","React","inProps","ref","props","useDefaultProps","className","other","_objectWithoutProperties","ownerState","classes","composeClasses","root","useUtilityClasses","_jsx","_objectSpread","gutterBottom","component","clsx","title","children","_jsxs","Alert","AlertTitle","AlertPage","isClosableAlertVisible","setIsClosableAlertVisible","useState","Box","sx","p","display","flexDirection","gap","variant","color","DsAlert","severity","Collapse","in","onClose","action","Button","size"],"sourceRoot":""}