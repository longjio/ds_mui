{"version":3,"file":"static/js/802.709241e0.chunk.js","mappings":"+GACA,MACA,GADeA,E,QAAAA,K,0DCGA,SAASC,EAAaC,GAKlC,IALmC,MACpCC,EAAK,KACLC,EAAI,aACJC,EAAY,QACZC,GACDJ,EACKK,GAAQC,EAAAA,EAAAA,GAASH,GAIrB,OAHIC,IACFC,EAAQA,EAAMD,IAAYC,IAErBE,EAAAA,EAAAA,GAAc,CACnBF,QACAH,OACAD,SAEJ,C,4GCZA,MAiDA,EAjDmBO,KAEXC,EAAAA,EAAAA,MAACC,EAAAA,EAAS,CAACC,GAAI,CAAEC,GAAI,GAAIC,SAAA,EACrBC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAACP,GAAI,CAAEQ,GAAI,GAAIN,SAAC,qEAIpEJ,EAAAA,EAAAA,MAACW,EAAAA,EAAG,CAACT,GAAI,CAAEU,SAAU,GAAIR,SAAA,EACrBC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKE,cAAY,EAAAL,SAAC,uFAItCJ,EAAAA,EAAAA,MAACa,EAAAA,EAAM,CAACC,WAAS,EAACC,QAAS,EAAEX,SAAA,EAEzBC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACG,KAAM,EAAEZ,UACZC,EAAAA,EAAAA,KAACY,EAAAA,EAAgB,CAAAb,SAAC,YAEtBC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACG,KAAM,EAAEZ,UACZC,EAAAA,EAAAA,KAACY,EAAAA,EAAgB,CAAAb,SAAC,YAEtBC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACG,KAAM,EAAEZ,UACZC,EAAAA,EAAAA,KAACY,EAAAA,EAAgB,CAAAb,SAAC,YAEtBC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACG,KAAM,EAAEZ,UACZC,EAAAA,EAAAA,KAACY,EAAAA,EAAgB,CAAAb,SAAC,kBAK9BJ,EAAAA,EAAAA,MAACW,EAAAA,EAAG,CAACT,GAAI,CAAEU,SAAU,EAAGM,GAAI,GAAId,SAAA,EAC5BC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKE,cAAY,EAAAL,SAAC,qEAGtCJ,EAAAA,EAAAA,MAACa,EAAAA,EAAM,CAACC,WAAS,EAACC,QAAS,EAAEX,SAAA,EACzBC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACG,KAAK,OAAMZ,UACfC,EAAAA,EAAAA,KAACY,EAAAA,EAAgB,CAAAb,SAAC,iBAEtBC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACG,KAAM,EAAEZ,UACZC,EAAAA,EAAAA,KAACY,EAAAA,EAAgB,CAAAb,SAAC,cAEtBC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACG,KAAK,OAAMZ,UACfC,EAAAA,EAAAA,KAACY,EAAAA,EAAgB,CAAAb,SAAC,wB,yGCvCnC,MAAMa,GAAmBE,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAc5B,IAAA,IAAC,MAAEK,GAAOL,EAAA,OAAA8B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACpDC,gBAAwC,SAAvB1B,EAAM2B,QAAQC,KAAkB,UAAY,QAC1D5B,EAAM6B,WAAWC,OAAK,IACzBC,QAAS/B,EAAMmB,QAAQ,GACvBa,UAAW,SACXC,MAAOjC,EAAM2B,QAAQO,KAAKC,eAOxBlB,EAASmB,EAAAA,YACX,CAACxC,EAAOyC,KACG5B,EAAAA,EAAAA,KAAC6B,EAAAA,GAAIb,EAAAA,EAAAA,GAAA,CAACY,IAAKA,GAASzC,MAInCqB,EAAOsB,YAAc,SAErB,S","sources":["../node_modules/@mui/system/esm/styled/styled.js","../node_modules/@mui/system/esm/useThemeProps/useThemeProps.js","pages/GridPage.tsx","components/layout/DsGrid.tsx"],"sourcesContent":["import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;","'use client';\n\nimport getThemeProps from \"./getThemeProps.js\";\nimport useTheme from \"../useTheme/index.js\";\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  let theme = useTheme(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  return getThemeProps({\n    theme,\n    name,\n    props\n  });\n}","// src/pages/DsGridPage.tsx\r\nimport React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport DsGrid, { DsGridItemStyled } from '../components/layout/DsGrid'; // DsGrid와 가져오기\r\n\r\nconst DsGridPage = () => {\r\n    return (\r\n        <Container sx={{ py: 4 }}>\r\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ mb: 4 }}>\r\n                DsGrid 컴포넌트 데모 페이지\r\n            </Typography>\r\n\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    Basic DsGrid 예제 (MUI Grid 직접 사용과 동일)\r\n                </Typography>\r\n                {/* DsGrid를 container로 사용 */}\r\n                <DsGrid container spacing={2}>\r\n                    {/* DsGrid를 item으로 사용하고, xs, sm, md 등의 prop 전달 */}\r\n                    <DsGrid size={8}>\r\n                        <DsGridItemStyled>xs=8</DsGridItemStyled>\r\n                    </DsGrid>\r\n                    <DsGrid size={4}>\r\n                        <DsGridItemStyled>xs=4</DsGridItemStyled>\r\n                    </DsGrid>\r\n                    <DsGrid size={4}>\r\n                        <DsGridItemStyled>xs=4</DsGridItemStyled>\r\n                    </DsGrid>\r\n                    <DsGrid size={8}>\r\n                        <DsGridItemStyled>xs=8</DsGridItemStyled>\r\n                    </DsGrid>\r\n                </DsGrid>\r\n            </Box>\r\n\r\n            <Box sx={{ flexGrow: 1, mt: 4 }}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                    다양한 크기의 DsGrid 아이템\r\n                </Typography>\r\n                <DsGrid container spacing={3}>\r\n                    <DsGrid size=\"grow\">\r\n                        <DsGridItemStyled>size=grow</DsGridItemStyled>\r\n                    </DsGrid>\r\n                    <DsGrid size={6}>\r\n                        <DsGridItemStyled>size=6</DsGridItemStyled>\r\n                    </DsGrid>\r\n                    <DsGrid size=\"grow\">\r\n                        <DsGridItemStyled>size=grow</DsGridItemStyled>\r\n                    </DsGrid>\r\n                </DsGrid>\r\n            </Box>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default DsGridPage;","// src/components/layout/DsGrid.tsx\r\n\r\nimport React from 'react';\r\n// MUI v7의 Grid와 그 타입을 정확히 가져옵니다.\r\nimport Grid, { GridProps } from '@mui/material/Grid';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\n\r\n// 이 스타일 컴포넌트는 그대로 유지합니다.\r\nexport const DsGridItemStyled = styled(Paper)(({ theme }) => ({\r\n    backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n}));\r\n\r\n// MUI v7의 GridProps를 직접 확장하여 모든 prop을 완벽하게 상속받습니다.\r\nexport interface DsGridProps extends GridProps {}\r\n\r\n// forwardRef를 사용하여 ref와 모든 props를 내부의 MUI Grid로 전달합니다.\r\nconst DsGrid = React.forwardRef<React.ElementRef<typeof Grid>, DsGridProps>(\r\n    (props, ref) => {\r\n        return <Grid ref={ref} {...props} />;\r\n    }\r\n);\r\n\r\nDsGrid.displayName = 'DsGrid';\r\n\r\nexport default DsGrid;"],"names":["createStyled","useThemeProps","_ref","props","name","defaultTheme","themeId","theme","useTheme","getThemeProps","DsGridPage","_jsxs","Container","sx","py","children","_jsx","Typography","variant","component","gutterBottom","mb","Box","flexGrow","DsGrid","container","spacing","size","DsGridItemStyled","mt","styled","Paper","_objectSpread","backgroundColor","palette","mode","typography","body2","padding","textAlign","color","text","secondary","React","ref","Grid","displayName"],"sourceRoot":""}