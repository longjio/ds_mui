{"version":3,"file":"static/js/730.7a1b412d.chunk.js","mappings":"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","sources":["components/button/DsButton.tsx","pages/ButtonPage.tsx"],"sourcesContent":["// src/components/button/DsButton.tsx\r\n\r\nimport * as React from 'react';\r\nimport Button, { ButtonProps as MuiButtonProps } from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress'; // 로딩 상태를 위한 임포트\r\nimport Box from '@mui/material/Box'; // <--- 이 줄을 여기로 옮깁니다!\r\n\r\n// DsButtonProps 정의: MuiButtonProps를 확장하여 필요한 props를 추가하거나 수정합니다.\r\n// 여기서는 'variant', 'color', 'size' 등의 기본값을 설정하거나,\r\n// DsButton만의 고유한 prop (예: loading)을 추가할 수 있습니다.\r\nexport interface DsButtonProps extends Omit<MuiButtonProps, 'variant' | 'color' | 'size'> {\r\n    /**\r\n     * 버튼의 시각적 스타일을 결정합니다.\r\n     * @default 'contained'\r\n     */\r\n    variant?: 'contained' | 'outlined' | 'text';\r\n    /**\r\n     * 버튼의 색상을 결정합니다. 테마 색상 팔레트를 사용합니다.\r\n     * @default 'primary'\r\n     */\r\n    color?: 'inherit' | 'primary' | 'secondary' | 'success' | 'error' | 'info' | 'warning';\r\n    /**\r\n     * 버튼의 크기를 결정합니다.\r\n     * @default 'medium'\r\n     */\r\n    size?: 'small' | 'medium' | 'large';\r\n    /**\r\n     * true로 설정하면 버튼 내부에 로딩 스피너를 표시하고 버튼을 비활성화합니다.\r\n     * @default false\r\n     */\r\n    loading?: boolean;\r\n    /**\r\n     * 로딩 스피너의 위치를 결정합니다.\r\n     * @default 'start'\r\n     */\r\n    loadingPosition?: 'start' | 'end' | 'center';\r\n    /**\r\n     * 로딩 상태일 때 표시될 텍스트입니다. 설정하지 않으면 기존 버튼 텍스트가 유지됩니다.\r\n     */\r\n    loadingIndicator?: React.ReactNode;\r\n}\r\n\r\nexport function DsButton({\r\n                             children,\r\n                             variant = 'contained', // 기본 variant 설정\r\n                             color = 'primary',     // 기본 color 설정\r\n                             size = 'medium',      // 기본 size 설정\r\n                             disabled = false,\r\n                             loading = false,\r\n                             loadingPosition = 'start',\r\n                             loadingIndicator,\r\n                             onClick,\r\n                             ...rest // 나머지 MuiButtonProps (예: href, fullWidth, startIcon, endIcon 등)\r\n                         }: DsButtonProps) {\r\n\r\n    const actualDisabled = disabled || loading; // 로딩 중일 때는 항상 비활성화\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        if (!actualDisabled && onClick) {\r\n            onClick(event);\r\n        }\r\n    };\r\n\r\n    const defaultLoadingIndicator = <CircularProgress color=\"inherit\" size={20} />;\r\n    const indicator = loadingIndicator || defaultLoadingIndicator;\r\n\r\n    return (\r\n        <Button\r\n            variant={variant}\r\n            color={color}\r\n            size={size}\r\n            disabled={actualDisabled}\r\n            onClick={handleClick}\r\n            {...rest} // startIcon, endIcon 등 나머지 props 전달\r\n        >\r\n            {loading && loadingPosition === 'start' && (\r\n                <Box component=\"span\" sx={{ display: 'inherit', mr: children ? 1 : 0, ml: -0.5 }}>\r\n                    {indicator}\r\n                </Box>\r\n            )}\r\n            {loading && loadingPosition === 'center' && !children && (\r\n                <Box component=\"span\" sx={{ display: 'inherit' }}>\r\n                    {indicator}\r\n                </Box>\r\n            )}\r\n            {!(loading && loadingPosition === 'center' && !children) && children}\r\n            {loading && loadingPosition === 'end' && (\r\n                <Box component=\"span\" sx={{ display: 'inherit', ml: children ? 1 : 0, mr: -0.5 }}>\r\n                    {indicator}\r\n                </Box>\r\n            )}\r\n        </Button>\r\n    );\r\n}\r\n\r\n// Box 컴포넌트를 사용하기 위해 임포트 (로딩 인디케이터 위치 조정용)\r\n// import Box from '@mui/material/Box'; // <--- 이 줄은 삭제하거나 주석 처리합니다.","// src/pages/ButtonPage.tsx\r\nimport React from 'react'; // useState 제거\r\nimport { Stack, Typography } from '@mui/material'; // Box, Switch, FormControlLabel 제거\r\n// DsButton 컴포넌트를 임포트합니다. (경로는 실제 프로젝트 구조에 맞게 조정해주세요)\r\nimport { DsButton, DsButtonProps } from '../components/button/DsButton';\r\n\r\nconst ButtonPage = () => {\r\n    // isLoading, showText 상태 및 핸들러 제거\r\n\r\n    const commonButtonProps: Partial<DsButtonProps> = {\r\n        // 여기에 모든 DsButton 예시에 공통적으로 적용하고 싶은 props를 넣을 수 있습니다.\r\n        // 예: fullWidth: true\r\n    };\r\n\r\n    return (\r\n        <Stack spacing={4} sx={{ p: 2 }}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n                Button\r\n            </Typography>\r\n\r\n            {/* 토글 스위치 Box 제거 */}\r\n\r\n            {/* Variant: Contained (기본값) */}\r\n            <Typography variant=\"h6\">Contained Buttons (Default Variant)</Typography>\r\n            <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n                <DsButton {...commonButtonProps} color=\"primary\" loading={false}> {/* isLoading -> false */}\r\n                    Primary {/* showText 조건 제거 */}\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} color=\"secondary\" loading={false} loadingPosition=\"end\">\r\n                    Secondary End\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} color=\"success\" disabled>\r\n                    Success Disabled\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} href=\"#contained-link\" color=\"error\">\r\n                    Error Link\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} loading={true} loadingPosition=\"center\" aria-label=\"Contained loading only\" />\r\n            </Stack>\r\n\r\n            {/* Variant: Outlined */}\r\n            <Typography variant=\"h6\">Outlined Buttons</Typography>\r\n            <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n                <DsButton {...commonButtonProps} variant=\"outlined\" color=\"primary\" loading={false}>\r\n                    Primary Outlined\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} variant=\"outlined\" color=\"warning\" loading={false} loadingPosition=\"end\">\r\n                    Warning End\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} variant=\"outlined\" disabled>\r\n                    Outlined Disabled\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} variant=\"outlined\" href=\"#outlined-link\" color=\"info\">\r\n                    Info Link\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} variant=\"outlined\" loading={true} loadingPosition=\"center\" aria-label=\"Outlined loading only\" />\r\n            </Stack>\r\n\r\n            {/* Variant: Text */}\r\n            <Typography variant=\"h6\">Text Buttons</Typography>\r\n            <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n                <DsButton {...commonButtonProps} variant=\"text\" color=\"primary\" loading={false}>\r\n                    Primary Text\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} variant=\"text\" loading={false} loadingPosition=\"end\">\r\n                    Default End\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} variant=\"text\" disabled>\r\n                    Text Disabled\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} variant=\"text\" href=\"#text-link\" color=\"inherit\">\r\n                    Inherit Link\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} variant=\"text\" loading={true} loadingPosition=\"center\" aria-label=\"Text loading only\" />\r\n            </Stack>\r\n\r\n            {/* Sizes */}\r\n            <Typography variant=\"h6\">Button Sizes</Typography>\r\n            <Stack direction=\"row\" spacing={2} alignItems=\"flex-start\">\r\n                <DsButton {...commonButtonProps} size=\"small\" loading={false}>\r\n                    Small\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} size=\"medium\" loading={false} loadingPosition=\"end\">\r\n                    Medium (Default)\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} size=\"large\" loading={false}>\r\n                    Large\r\n                </DsButton>\r\n            </Stack>\r\n\r\n            {/* Custom Loading Indicator */}\r\n            <Typography variant=\"h6\">Custom Loading Indicator</Typography>\r\n            <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n                <DsButton\r\n                    {...commonButtonProps}\r\n                    loading={false} // 또는 true로 고정하여 항상 로딩 인디케이터를 볼 수 있게 할 수 있습니다.\r\n                    loadingIndicator={<Typography variant=\"caption\">Wait...</Typography>}\r\n                >\r\n                    Custom Load\r\n                </DsButton>\r\n            </Stack>\r\n\r\n            {/* Full Width Button Example */}\r\n            <Typography variant=\"h6\">Full Width Button</Typography>\r\n            <DsButton {...commonButtonProps} fullWidth loading={false}>\r\n                Full Width Button\r\n            </DsButton>\r\n\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default ButtonPage;"],"names":["DsButton","_ref","children","variant","color","size","disabled","loading","loadingPosition","loadingIndicator","onClick","rest","_objectWithoutProperties","_excluded","actualDisabled","defaultLoadingIndicator","_jsx","CircularProgress","indicator","_jsxs","Button","_objectSpread","event","Box","component","sx","display","mr","ml","ButtonPage","commonButtonProps","Stack","spacing","p","Typography","gutterBottom","direction","alignItems","href","fullWidth"],"sourceRoot":""}