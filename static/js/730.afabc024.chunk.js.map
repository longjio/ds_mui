{"version":3,"file":"static/js/730.afabc024.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/Stack/createStack.js","../node_modules/@mui/material/esm/Stack/Stack.js","components/button/DsButton.tsx","pages/ButtonPage.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport deepmerge from '@mui/utils/deepmerge';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport systemStyled from \"../styled/index.js\";\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport { extendSxProp } from \"../styleFunctionSx/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { handleBreakpoints, mergeBreakpointsInOrder, resolveBreakpointValues } from \"../breakpoints/index.js\";\nimport { createUnarySpacing, getValue } from \"../spacing/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\n// widening Theme to any so that the consumer can own the theme structure.\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiStack',\n  slot: 'Root'\n});\nfunction useThemePropsDefault(props) {\n  return useThemePropsSystem({\n    props,\n    name: 'MuiStack',\n    defaultTheme\n  });\n}\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push(/*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = {\n    display: 'flex',\n    flexDirection: 'column',\n    ...handleBreakpoints({\n      theme\n    }, resolveBreakpointValues({\n      values: ownerState.direction,\n      breakpoints: theme.breakpoints.values\n    }), propValue => ({\n      flexDirection: propValue\n    }))\n  };\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      if (ownerState.useFlexGap) {\n        return {\n          gap: getValue(transformer, propValue)\n        };\n      }\n      return {\n        // The useFlexGap={false} implement relies on each child to give up control of the margin.\n        // We need to reset the margin to avoid double spacing.\n        '& > :not(style):not(style)': {\n          margin: 0\n        },\n        '& > :not(style) ~ :not(style)': {\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nexport default function createStack(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiStack'\n  } = options;\n  const useUtilityClasses = () => {\n    const slots = {\n      root: ['root']\n    };\n    return composeClasses(slots, slot => generateUtilityClass(componentName, slot), {});\n  };\n  const StackRoot = createStyledComponent(style);\n  const Stack = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n    const themeProps = useThemeProps(inProps);\n    const props = extendSxProp(themeProps); // `color` type conflicts with html color attribute.\n    const {\n      component = 'div',\n      direction = 'column',\n      spacing = 0,\n      divider,\n      children,\n      className,\n      useFlexGap = false,\n      ...other\n    } = props;\n    const ownerState = {\n      direction,\n      spacing,\n      useFlexGap\n    };\n    const classes = useUtilityClasses();\n    return /*#__PURE__*/_jsx(StackRoot, {\n      as: component,\n      ownerState: ownerState,\n      ref: ref,\n      className: clsx(classes.root, className),\n      ...other,\n      children: divider ? joinChildren(children, divider) : children\n    });\n  });\n  process.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n    divider: PropTypes.node,\n    spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Stack;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createStack } from '@mui/system';\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Stack = createStack({\n  createStyledComponent: styled('div', {\n    name: 'MuiStack',\n    slot: 'Root'\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiStack'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the CSS flexbox `gap` is used instead of applying `margin` to children.\n   *\n   * While CSS `gap` removes the [known limitations](https://mui.com/joy-ui/react-stack/#limitations),\n   * it is not fully supported in some browsers. We recommend checking https://caniuse.com/?search=flex%20gap before using this flag.\n   *\n   * To enable this flag globally, follow the [theme's default props](https://mui.com/material-ui/customization/theme-components/#default-props) configuration.\n   * @default false\n   */\n  useFlexGap: PropTypes.bool\n} : void 0;\nexport default Stack;","// src/components/button/DsButton.tsx\r\n\r\nimport * as React from 'react';\r\nimport Button, { ButtonProps as MuiButtonProps } from '@mui/material/Button';\r\nimport CircularProgress from '@mui/material/CircularProgress'; // 로딩 상태를 위한 임포트\r\nimport Box from '@mui/material/Box'; // <--- 이 줄을 여기로 옮깁니다!\r\n\r\n// DsButtonProps 정의: MuiButtonProps를 확장하여 필요한 props를 추가하거나 수정합니다.\r\n// 여기서는 'variant', 'color', 'size' 등의 기본값을 설정하거나,\r\n// DsButton만의 고유한 prop (예: loading)을 추가할 수 있습니다.\r\nexport interface DsButtonProps extends Omit<MuiButtonProps, 'variant' | 'color' | 'size'> {\r\n    /**\r\n     * 버튼의 시각적 스타일을 결정합니다.\r\n     * @default 'contained'\r\n     */\r\n    variant?: 'contained' | 'outlined' | 'text';\r\n    /**\r\n     * 버튼의 색상을 결정합니다. 테마 색상 팔레트를 사용합니다.\r\n     * @default 'primary'\r\n     */\r\n    color?: 'inherit' | 'primary' | 'secondary' | 'success' | 'error' | 'info' | 'warning';\r\n    /**\r\n     * 버튼의 크기를 결정합니다.\r\n     * @default 'medium'\r\n     */\r\n    size?: 'small' | 'medium' | 'large';\r\n    /**\r\n     * true로 설정하면 버튼 내부에 로딩 스피너를 표시하고 버튼을 비활성화합니다.\r\n     * @default false\r\n     */\r\n    loading?: boolean;\r\n    /**\r\n     * 로딩 스피너의 위치를 결정합니다.\r\n     * @default 'start'\r\n     */\r\n    loadingPosition?: 'start' | 'end' | 'center';\r\n    /**\r\n     * 로딩 상태일 때 표시될 텍스트입니다. 설정하지 않으면 기존 버튼 텍스트가 유지됩니다.\r\n     */\r\n    loadingIndicator?: React.ReactNode;\r\n}\r\n\r\nexport function DsButton({\r\n                             children,\r\n                             variant = 'contained', // 기본 variant 설정\r\n                             color = 'primary',     // 기본 color 설정\r\n                             size = 'medium',      // 기본 size 설정\r\n                             disabled = false,\r\n                             loading = false,\r\n                             loadingPosition = 'start',\r\n                             loadingIndicator,\r\n                             onClick,\r\n                             ...rest // 나머지 MuiButtonProps (예: href, fullWidth, startIcon, endIcon 등)\r\n                         }: DsButtonProps) {\r\n\r\n    const actualDisabled = disabled || loading; // 로딩 중일 때는 항상 비활성화\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        if (!actualDisabled && onClick) {\r\n            onClick(event);\r\n        }\r\n    };\r\n\r\n    const defaultLoadingIndicator = <CircularProgress color=\"inherit\" size={20} />;\r\n    const indicator = loadingIndicator || defaultLoadingIndicator;\r\n\r\n    return (\r\n        <Button\r\n            variant={variant}\r\n            color={color}\r\n            size={size}\r\n            disabled={actualDisabled}\r\n            onClick={handleClick}\r\n            {...rest} // startIcon, endIcon 등 나머지 props 전달\r\n        >\r\n            {loading && loadingPosition === 'start' && (\r\n                <Box component=\"span\" sx={{ display: 'inherit', mr: children ? 1 : 0, ml: -0.5 }}>\r\n                    {indicator}\r\n                </Box>\r\n            )}\r\n            {loading && loadingPosition === 'center' && !children && (\r\n                <Box component=\"span\" sx={{ display: 'inherit' }}>\r\n                    {indicator}\r\n                </Box>\r\n            )}\r\n            {!(loading && loadingPosition === 'center' && !children) && children}\r\n            {loading && loadingPosition === 'end' && (\r\n                <Box component=\"span\" sx={{ display: 'inherit', ml: children ? 1 : 0, mr: -0.5 }}>\r\n                    {indicator}\r\n                </Box>\r\n            )}\r\n        </Button>\r\n    );\r\n}\r\n\r\n// Box 컴포넌트를 사용하기 위해 임포트 (로딩 인디케이터 위치 조정용)\r\n// import Box from '@mui/material/Box'; // <--- 이 줄은 삭제하거나 주석 처리합니다.","// src/pages/ButtonPage.tsx\r\nimport React from 'react'; // useState 제거\r\nimport { Stack, Typography } from '@mui/material'; // Box, Switch, FormControlLabel 제거\r\n// DsButton 컴포넌트를 임포트합니다. (경로는 실제 프로젝트 구조에 맞게 조정해주세요)\r\nimport { DsButton, DsButtonProps } from '../components/button/DsButton';\r\n\r\nconst ButtonPage = () => {\r\n    // isLoading, showText 상태 및 핸들러 제거\r\n\r\n    const commonButtonProps: Partial<DsButtonProps> = {\r\n        // 여기에 모든 DsButton 예시에 공통적으로 적용하고 싶은 props를 넣을 수 있습니다.\r\n        // 예: fullWidth: true\r\n    };\r\n\r\n    return (\r\n        <Stack spacing={4} sx={{ p: 2 }}>\r\n            <Typography variant=\"h4\" gutterBottom>\r\n                Button\r\n            </Typography>\r\n\r\n            {/* 토글 스위치 Box 제거 */}\r\n\r\n            {/* Variant: Contained (기본값) */}\r\n            <Typography variant=\"h6\">Contained Buttons (Default Variant)</Typography>\r\n            <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n                <DsButton {...commonButtonProps} color=\"primary\" loading={false}> {/* isLoading -> false */}\r\n                    Primary {/* showText 조건 제거 */}\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} color=\"secondary\" loading={false} loadingPosition=\"end\">\r\n                    Secondary End\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} color=\"success\" disabled>\r\n                    Success Disabled\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} href=\"#contained-link\" color=\"error\">\r\n                    Error Link\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} loading={true} loadingPosition=\"center\" aria-label=\"Contained loading only\" />\r\n            </Stack>\r\n\r\n            {/* Variant: Outlined */}\r\n            <Typography variant=\"h6\">Outlined Buttons</Typography>\r\n            <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n                <DsButton {...commonButtonProps} variant=\"outlined\" color=\"primary\" loading={false}>\r\n                    Primary Outlined\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} variant=\"outlined\" color=\"warning\" loading={false} loadingPosition=\"end\">\r\n                    Warning End\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} variant=\"outlined\" disabled>\r\n                    Outlined Disabled\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} variant=\"outlined\" href=\"#outlined-link\" color=\"info\">\r\n                    Info Link\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} variant=\"outlined\" loading={true} loadingPosition=\"center\" aria-label=\"Outlined loading only\" />\r\n            </Stack>\r\n\r\n            {/* Variant: Text */}\r\n            <Typography variant=\"h6\">Text Buttons</Typography>\r\n            <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n                <DsButton {...commonButtonProps} variant=\"text\" color=\"primary\" loading={false}>\r\n                    Primary Text\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} variant=\"text\" loading={false} loadingPosition=\"end\">\r\n                    Default End\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} variant=\"text\" disabled>\r\n                    Text Disabled\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} variant=\"text\" href=\"#text-link\" color=\"inherit\">\r\n                    Inherit Link\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} variant=\"text\" loading={true} loadingPosition=\"center\" aria-label=\"Text loading only\" />\r\n            </Stack>\r\n\r\n            {/* Sizes */}\r\n            <Typography variant=\"h6\">Button Sizes</Typography>\r\n            <Stack direction=\"row\" spacing={2} alignItems=\"flex-start\">\r\n                <DsButton {...commonButtonProps} size=\"small\" loading={false}>\r\n                    Small\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} size=\"medium\" loading={false} loadingPosition=\"end\">\r\n                    Medium (Default)\r\n                </DsButton>\r\n                <DsButton {...commonButtonProps} size=\"large\" loading={false}>\r\n                    Large\r\n                </DsButton>\r\n            </Stack>\r\n\r\n            {/* Custom Loading Indicator */}\r\n            <Typography variant=\"h6\">Custom Loading Indicator</Typography>\r\n            <Stack direction=\"row\" spacing={2} alignItems=\"center\">\r\n                <DsButton\r\n                    {...commonButtonProps}\r\n                    loading={false} // 또는 true로 고정하여 항상 로딩 인디케이터를 볼 수 있게 할 수 있습니다.\r\n                    loadingIndicator={<Typography variant=\"caption\">Wait...</Typography>}\r\n                >\r\n                    Custom Load\r\n                </DsButton>\r\n            </Stack>\r\n\r\n            {/* Full Width Button Example */}\r\n            <Typography variant=\"h6\">Full Width Button</Typography>\r\n            <DsButton {...commonButtonProps} fullWidth loading={false}>\r\n                Full Width Button\r\n            </DsButton>\r\n\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default ButtonPage;"],"names":["_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","useThemePropsDefault","props","useThemePropsSystem","joinChildren","children","separator","childrenArray","React","toArray","filter","Boolean","reduce","output","child","index","push","length","key","concat","style","_ref","ownerState","theme","styles","_objectSpread","display","flexDirection","handleBreakpoints","resolveBreakpointValues","values","direction","breakpoints","propValue","spacing","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","styleFromPropValue","useFlexGap","gap","getValue","margin","row","column","deepmerge","mergeBreakpointsInOrder","Stack","options","arguments","undefined","createStyledComponent","useThemeProps","componentName","StackRoot","inProps","ref","themeProps","extendSxProp","component","divider","className","other","_objectWithoutProperties","classes","composeClasses","root","generateUtilityClass","_jsx","as","clsx","createStack","styled","useDefaultProps","DsButton","variant","color","size","disabled","loading","loadingPosition","loadingIndicator","onClick","rest","actualDisabled","defaultLoadingIndicator","CircularProgress","indicator","_jsxs","Button","event","Box","sx","mr","ml","ButtonPage","commonButtonProps","p","Typography","gutterBottom","alignItems","href","fullWidth"],"sourceRoot":""}