{"version":3,"file":"static/js/608.1061d519.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/MoveToInbox.js","../node_modules/@mui/icons-material/esm/Mail.js","components/navigation/DsDrawer.tsx","pages/DrawerPage.tsx","../node_modules/@mui/material/esm/ListItemIcon/listItemIconClasses.js","../node_modules/@mui/material/esm/ListItemIcon/ListItemIcon.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H4.99c-1.11 0-1.98.9-1.98 2L3 19c0 1.1.88 2 1.99 2H19c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2m0 12h-4c0 1.66-1.35 3-3 3s-3-1.34-3-3H4.99V5H19zm-3-5h-2V7h-4v3H8l4 4z\"\n}), 'MoveToInbox');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z\"\n}), 'Mail');","import React from 'react';\r\nimport { Drawer, DrawerProps as MuiDrawerProps, Box } from '@mui/material';\r\n\r\n// DsDrawer 컴포넌트가 받을 props 타입을 정의합니다.\r\n// MUI의 DrawerProps를 확장하여 모든 기본 기능을 지원합니다.\r\ninterface DsDrawerProps extends Omit<MuiDrawerProps, 'onClose'> {\r\n    open: boolean;\r\n    onClose: (event: React.KeyboardEvent | React.MouseEvent) => void;\r\n    children: React.ReactNode;\r\n    // Drawer의 너비를 prop으로 받아 조절할 수 있도록 추가합니다.\r\n    width?: number | string;\r\n}\r\n\r\nconst DsDrawer: React.FC<DsDrawerProps> = ({\r\n                                               open,\r\n                                               onClose,\r\n                                               children,\r\n                                               anchor = 'left', // 기본 열림 방향을 'left'로 설정\r\n                                               width,\r\n                                               ...otherProps // 나머지 모든 MUI Drawer props\r\n                                           }) => {\r\n    // Drawer의 너비를 동적으로 설정합니다.\r\n    // 너비 prop이 주어지지 않으면 기본 너비(250px)를 사용합니다.\r\n    const drawerWidth = (anchor === 'left' || anchor === 'right') ? (width || 250) : 'auto';\r\n\r\n    return (\r\n        <Drawer\r\n            anchor={anchor}\r\n            open={open}\r\n            onClose={onClose}\r\n            {...otherProps}\r\n        >\r\n            <Box\r\n                sx={{ width: drawerWidth }}\r\n                role=\"presentation\"\r\n                // 컨텐츠 클릭 시 Drawer가 닫히도록 하려면 아래 두 줄을 활성화합니다.\r\n                // onClick={onClose}\r\n                // onKeyDown={onClose}\r\n            >\r\n                {children}\r\n            </Box>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nexport default DsDrawer;","// src/pages/DrawerPage.tsx (DsDrawer 사용 예시)\r\n\r\nimport React, { useState } from 'react';\r\nimport {\r\n    Box,\r\n    Button,\r\n    List,\r\n    Divider,\r\n    ListItem,\r\n    ListItemButton,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Typography,\r\n} from '@mui/material';\r\nimport InboxIcon from '@mui/icons-material/MoveToInbox';\r\nimport MailIcon from '@mui/icons-material/Mail';\r\n// 방금 만든 재사용 가능한 DsDrawer 컴포넌트를 import 합니다.\r\nimport DsDrawer from '../components/navigation/DsDrawer';\r\n\r\ntype Anchor = 'top' | 'left' | 'bottom' | 'right';\r\n\r\nconst DrawerPage = () => {\r\n    const [state, setState] = useState({\r\n        top: false,\r\n        left: false,\r\n        bottom: false,\r\n        right: false,\r\n    });\r\n\r\n    const toggleDrawer =\r\n        (anchor: Anchor, open: boolean) =>\r\n            (event: React.KeyboardEvent | React.MouseEvent) => {\r\n                if (\r\n                    event.type === 'keydown' &&\r\n                    ((event as React.KeyboardEvent).key === 'Tab' ||\r\n                        (event as React.KeyboardEvent).key === 'Shift')\r\n                ) {\r\n                    return;\r\n                }\r\n                setState({ ...state, [anchor]: open });\r\n            };\r\n\r\n    // Drawer 내부에 표시될 컨텐츠\r\n    const drawerContent = (\r\n        <>\r\n            <List>\r\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                    <ListItem key={text} disablePadding>\r\n                        <ListItemButton>\r\n                            <ListItemIcon>\r\n                                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                    <ListItem key={text} disablePadding>\r\n                        <ListItemButton>\r\n                            <ListItemIcon>\r\n                                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={text} />\r\n                        </ListItemButton>\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <Box sx={{ p: 3, textAlign: 'center' }}>\r\n            <Typography variant=\"h1\" gutterBottom>Drawer</Typography>\r\n            <Typography color=\"text.secondary\" sx={{ mb: 4 }}>\r\n                Drawer는 화면의 가장자리에서 일시적으로 나타나는 내비게이션 패널입니다.\r\n            </Typography>\r\n\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, flexWrap: 'wrap' }}>\r\n                {(['left', 'right', 'top', 'bottom'] as const).map((anchor) => (\r\n                    <React.Fragment key={anchor}>\r\n                        <Button variant=\"contained\" onClick={toggleDrawer(anchor, true)}>\r\n                            Open {anchor}\r\n                        </Button>\r\n                        {/* DsDrawer 컴포넌트를 사용하여 간결하게 표현 */}\r\n                        <DsDrawer\r\n                            anchor={anchor}\r\n                            open={state[anchor]}\r\n                            onClose={toggleDrawer(anchor, false)}\r\n                        >\r\n                            {drawerContent}\r\n                        </DsDrawer>\r\n                    </React.Fragment>\r\n                ))}\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default DrawerPage;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getListItemIconUtilityClass } from \"./listItemIconClasses.js\";\nimport ListContext from \"../List/ListContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemIconUtilityClass, classes);\n};\nconst ListItemIconRoot = styled('div', {\n  name: 'MuiListItemIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  minWidth: 56,\n  color: (theme.vars || theme).palette.action.active,\n  flexShrink: 0,\n  display: 'inline-flex',\n  variants: [{\n    props: {\n      alignItems: 'flex-start'\n    },\n    style: {\n      marginTop: 8\n    }\n  }]\n})));\n\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\nconst ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListItemIcon'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const context = React.useContext(ListContext);\n  const ownerState = {\n    ...props,\n    alignItems: context.alignItems\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemIconRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@mui/icons-material` SVG icon element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemIcon;"],"names":["createSvgIcon","_jsx","d","_ref","open","onClose","children","anchor","width","otherProps","_objectWithoutProperties","_excluded","drawerWidth","Drawer","_objectSpread","Box","sx","role","DrawerPage","state","setState","useState","top","left","bottom","right","toggleDrawer","event","type","key","drawerContent","_jsxs","_Fragment","List","map","text","index","ListItem","disablePadding","ListItemButton","ListItemIcon","InboxIcon","MailIcon","ListItemText","primary","Divider","p","textAlign","Typography","variant","gutterBottom","color","mb","display","justifyContent","gap","flexWrap","React","Button","onClick","DsDrawer","getListItemIconUtilityClass","slot","generateUtilityClass","generateUtilityClasses","ListItemIconRoot","styled","name","overridesResolver","props","styles","ownerState","root","alignItems","alignItemsFlexStart","memoTheme","theme","minWidth","vars","palette","action","active","flexShrink","variants","style","marginTop","inProps","ref","useDefaultProps","className","other","context","ListContext","classes","slots","composeClasses","useUtilityClasses","clsx"],"sourceRoot":""}