{"version":3,"file":"static/js/604.0d1e908f.chunk.js","mappings":"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","sources":["components/input/DsSelect.tsx","pages/SelectPage.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl, { FormControlProps } from '@mui/material/FormControl';\r\nimport Select, { SelectChangeEvent, SelectProps as MuiSelectProps } from '@mui/material/Select';\r\nimport FormHelperText from '@mui/material/FormHelperText';\r\n\r\nexport interface DsSelectItem {\r\n    label: string;\r\n    value: string | number;\r\n    disabled?: boolean;\r\n}\r\n\r\n// Omit 목록에 defaultValue와 renderValue 추가\r\nexport interface DsSelectProps extends Omit<MuiSelectProps,\r\n    'value' | 'onChange' | 'label' | 'children' | 'defaultValue' | 'renderValue'\r\n> {\r\n    value: string | number;\r\n    onChange: (event: SelectChangeEvent<string | number>, child: React.ReactNode) => void;\r\n    label: string;\r\n    items: DsSelectItem[];\r\n    helperText?: React.ReactNode;\r\n    error?: FormControlProps['error'];\r\n    required?: FormControlProps['required'];\r\n    formControlSx?: FormControlProps['sx'];\r\n    // defaultValue와 renderValue를 string | number 타입으로 재정의\r\n    defaultValue?: string | number;\r\n    renderValue?: (value: string | number) => React.ReactNode;\r\n}\r\n\r\nexport function DsSelect({\r\n                             value,\r\n                             onChange,\r\n                             label,\r\n                             items,\r\n                             disabled = false,\r\n                             fullWidth = true,\r\n                             id = 'ds-select',\r\n                             helperText,\r\n                             error,\r\n                             required,\r\n                             formControlSx,\r\n                             variant = 'outlined',\r\n                             defaultValue, // 명시적으로 props 받기\r\n                             renderValue,  // 명시적으로 props 받기\r\n                             ...rest\r\n                         }: DsSelectProps) {\r\n    const labelId = `${id}-label`;\r\n\r\n    return (\r\n        <FormControl\r\n            fullWidth={fullWidth}\r\n            disabled={disabled}\r\n            error={error}\r\n            required={required}\r\n            variant={variant}\r\n            sx={formControlSx}\r\n        >\r\n            <InputLabel id={labelId}>{label}</InputLabel>\r\n            <Select\r\n                labelId={labelId}\r\n                id={id}\r\n                value={value}\r\n                label={label}\r\n                onChange={onChange}\r\n                disabled={disabled}\r\n                variant={variant}\r\n                defaultValue={defaultValue} // 전달\r\n                renderValue={renderValue}   // 전달\r\n                {...rest}\r\n            >\r\n                {items.map((item) => (\r\n                    <MenuItem\r\n                        key={item.value}\r\n                        value={item.value}\r\n                        disabled={item.disabled}\r\n                    >\r\n                        {item.label}\r\n                    </MenuItem>\r\n                ))}\r\n            </Select>\r\n            {helperText && <FormHelperText error={error}>{helperText}</FormHelperText>}\r\n        </FormControl>\r\n    );\r\n}","// src/pages/SelectPage.tsx\r\n\r\nimport React, { useState } from 'react';\r\nimport { Stack, Typography, Box } from '@mui/material'; // Paper import 제거\r\nimport { DsSelect, DsSelectItem } from '../components/input/DsSelect'; // DsSelect 컴포넌트의 실제 경로로 수정해주세요.\r\nimport { SelectChangeEvent } from '@mui/material/Select';\r\n\r\nconst ageItems: DsSelectItem[] = [\r\n    { label: '10대', value: 10 },\r\n    { label: '20대', value: 20 },\r\n    { label: '30대', value: 30 },\r\n    { label: '40대', value: 40 },\r\n    { label: '50대 (선택불가)', value: 50, disabled: true },\r\n];\r\n\r\nconst fruitItems: DsSelectItem[] = [\r\n    { label: '사과', value: 'apple' },\r\n    { label: '바나나', value: 'banana' },\r\n    { label: '오렌지', value: 'orange' },\r\n    { label: '포도', value: 'grape' },\r\n];\r\n\r\nconst SelectPage = () => {\r\n    const [age, setAge] = useState<string | number>(20);\r\n    const [fruit, setFruit] = useState<string | number>('banana');\r\n    const [city, setCity] = useState<string | number>(''); // 기본값 없는 경우\r\n    const [country, setCountry] = useState<string | number>('KR'); // defaultValue 사용 예시\r\n\r\n    const handleAgeChange = (event: SelectChangeEvent<string | number>) => {\r\n        setAge(event.target.value);\r\n    };\r\n\r\n    const handleFruitChange = (event: SelectChangeEvent<string | number>) => {\r\n        setFruit(event.target.value);\r\n    };\r\n\r\n    const handleCityChange = (event: SelectChangeEvent<string | number>) => {\r\n        setCity(event.target.value);\r\n    };\r\n\r\n    const handleCountryChange = (event: SelectChangeEvent<string | number>) => {\r\n        setCountry(event.target.value);\r\n    };\r\n\r\n    const countryItems: DsSelectItem[] = [\r\n        { value: 'KR', label: '대한민국' },\r\n        { value: 'US', label: '미국' },\r\n        { value: 'JP', label: '일본' },\r\n        { value: 'CN', label: '중국' },\r\n    ];\r\n\r\n    return (\r\n        <Stack spacing={4} sx={{ p: 3}}>\r\n            <Typography variant=\"h1\" component=\"h1\" gutterBottom>\r\n                Select\r\n            </Typography>\r\n\r\n            <Box sx={{ p: 3 }}> {/* Paper -> Box, elevation 제거 */}\r\n                <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n                    기본 DsSelect (제어 컴포넌트)\r\n                </Typography>\r\n                <DsSelect\r\n                    label=\"나이 선택\"\r\n                    value={age}\r\n                    onChange={handleAgeChange}\r\n                    items={ageItems}\r\n                    id=\"age-select\"\r\n                    formControlSx={{ width: 400 }} // 너비 추가\r\n                />\r\n                <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                    선택된 값: {age}\r\n                </Typography>\r\n            </Box>\r\n\r\n            <Box sx={{ p: 3 }}> {/* Paper -> Box, elevation 제거 */}\r\n                <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n                    헬퍼 텍스트 및 에러 상태\r\n                </Typography>\r\n                <DsSelect\r\n                    label=\"과일 선택\"\r\n                    value={fruit}\r\n                    onChange={handleFruitChange}\r\n                    items={fruitItems}\r\n                    id=\"fruit-select-error\"\r\n                    helperText={fruit === 'grape' ? \"포도는 알러지가 있을 수 있습니다.\" : \"좋아하는 과일을 선택하세요.\"}\r\n                    error={fruit === 'grape'} // 'grape' 선택 시 에러 상태\r\n                    formControlSx={{ width: 400 }} // 너비 추가\r\n                />\r\n                <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                    선택된 값: {fruit}\r\n                </Typography>\r\n            </Box>\r\n\r\n            <Box sx={{ p: 3 }}> {/* Paper -> Box, elevation 제거 */}\r\n                <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n                    비활성화된 DsSelect\r\n                </Typography>\r\n                <DsSelect\r\n                    label=\"선택 불가 항목\"\r\n                    value={30} // 임의의 값\r\n                    onChange={() => { /* 비활성화 상태이므로 호출되지 않음 */ }}\r\n                    items={ageItems}\r\n                    disabled={true}\r\n                    id=\"disabled-select\"\r\n                    formControlSx={{ width: 400 }} // 너비 추가\r\n                />\r\n            </Box>\r\n\r\n            <Box sx={{ p: 3 }}> {/* Paper -> Box, elevation 제거 */}\r\n                <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n                    필수 항목 (Required) 및 빈 값 허용\r\n                </Typography>\r\n                <DsSelect\r\n                    label=\"도시 선택 (필수)\"\r\n                    value={city}\r\n                    onChange={handleCityChange}\r\n                    items={[\r\n                        { label: '선택안함', value: '' }, // 빈 값 옵션\r\n                        { label: '서울', value: 'seoul' },\r\n                        { label: '부산', value: 'busan' },\r\n                        { label: '인천', value: 'incheon' },\r\n                    ]}\r\n                    id=\"city-select\"\r\n                    required={true}\r\n                    helperText={!city ? \"도시를 선택해주세요.\" : \"\"}\r\n                    error={!city}\r\n                    formControlSx={{ width: 400 }} // 너비 추가\r\n                />\r\n                <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                    선택된 값: {city || \"선택 안됨\"}\r\n                </Typography>\r\n            </Box>\r\n\r\n            <Box sx={{ p: 3 }}> {/* Paper -> Box, elevation 제거 */}\r\n                <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n                    `defaultValue` 사용 예시\r\n                </Typography>\r\n                <DsSelect\r\n                    label=\"국가 선택 (Default: 대한민국)\"\r\n                    value={country} // 제어 컴포넌트로 사용하려면 value와 onChange가 모두 필요\r\n                    onChange={handleCountryChange}\r\n                    items={countryItems}\r\n                    defaultValue=\"KR\" // 초기 렌더링 시 이 값이 사용되지만, value prop이 우선됨\r\n                    id=\"country-default-select\"\r\n                    helperText=\"value prop이 있으면 defaultValue는 초기 렌더링에만 영향을 줍니다.\"\r\n                    formControlSx={{ width: 400 }} // 너비 추가\r\n                />\r\n                <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                    선택된 값: {country}\r\n                </Typography>\r\n            </Box>\r\n\r\n            <Box sx={{ p: 3 }}> {/* Paper -> Box, elevation 제거 */}\r\n                <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n                    `renderValue` 사용 예시\r\n                </Typography>\r\n                <DsSelect\r\n                    label=\"국가 선택 (선택된 값 커스텀 표시)\"\r\n                    value={country}\r\n                    onChange={handleCountryChange}\r\n                    items={countryItems}\r\n                    id=\"country-render-value-select\"\r\n                    renderValue={(selectedValue) => {\r\n                        const selectedItem = countryItems.find(item => item.value === selectedValue);\r\n                        return `선택: ${selectedItem ? selectedItem.label : '알 수 없음'} (코드: ${selectedValue})`;\r\n                    }}\r\n                    helperText=\"선택된 값을 원하는 형태로 표시합니다.\"\r\n                    formControlSx={{ width: 400 }} // 너비 추가\r\n                />\r\n                <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                    실제 값: {country}\r\n                </Typography>\r\n            </Box>\r\n\r\n            <Box sx={{ p: 3 }}> {/* Paper -> Box, elevation 제거 */}\r\n                <Typography variant=\"h6\" component=\"h2\" gutterBottom>\r\n                    커스텀 FormControl 스타일\r\n                </Typography>\r\n                <DsSelect\r\n                    label=\"스타일 적용된 선택\"\r\n                    value={age}\r\n                    onChange={handleAgeChange}\r\n                    items={ageItems}\r\n                    id=\"styled-select\"\r\n                    formControlSx={{\r\n                        backgroundColor: 'aliceblue',\r\n                        borderRadius: '8px',\r\n                        p: 1, // 내부 패딩\r\n                        width: 400, // 너비 추가\r\n                    }}\r\n                />\r\n            </Box>\r\n        </Stack>\r\n    );\r\n};\r\n\r\nexport default SelectPage;"],"names":["DsSelect","_ref","value","onChange","label","items","disabled","fullWidth","id","helperText","error","required","formControlSx","variant","defaultValue","renderValue","rest","_objectWithoutProperties","_excluded","labelId","concat","_jsxs","FormControl","sx","children","_jsx","InputLabel","Select","_objectSpread","map","item","MenuItem","FormHelperText","ageItems","fruitItems","SelectPage","age","setAge","useState","fruit","setFruit","city","setCity","country","setCountry","handleAgeChange","event","target","handleCountryChange","countryItems","Stack","spacing","p","Typography","component","gutterBottom","Box","width","mt","selectedValue","selectedItem","find","backgroundColor","borderRadius"],"sourceRoot":""}